version: "3.8"

services:
  api:
    build: .
    restart: always
    ports:
      - 8080:8080
    volumes:
      - .:/src
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:13.3
    user: root
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: root
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./data_pg:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    user: root
    restart: always
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ./data_admin:/var/lib/pgadmin

  kafka:
    image: bitnami/kafka:3.5
    user: root
    ports:
      - 9092:9092
      - 9093:9093
      - 29092:29092
    volumes:
      - ./data_kafka:/bitnami
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093,PLAINTEXT_HOST://0.0.0.0:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    user: root
    restart: always
    ports:
      - 9080:8080
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - DYNAMIC_CONFIG_ENABLED=true

  worker:
    build: .
    restart: always
    command: python -u workers/kafka_to_pg_logs.py
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 9965:9965
    volumes:
      - .:/src

  redis:
    image: redis/redis-stack:latest
    user: root
    restart: always
    ports:
      - 6379:6379
      - 8001:8001
    environment:
      REDIS_ARGS: --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./data_redis:/data
